---
on:
  push:
    branches:
      - "*"
    tags:
      - "v*.*.*"

jobs:
  pre-commit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      - name: Debug
        run: pwd && ls -la

      - name: Install uv
        uses: astral-sh/setup-uv@v6

      - name: Install python dependencies
        run: uv venv && . .venv/bin/activate && uv sync --all-extras --dev

      - name: Run pre-commit
        run: uv run pre-commit run --show-diff-on-failure --all-files
        env:
          SKIP: "no-commit-to-branch"

  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      - name: Debug
        run: pwd && ls -la

      - name: Install uv
        uses: astral-sh/setup-uv@v6

      - name: Install python dependencies
        run: uv venv && . .venv/bin/activate && uv sync --all-extras --dev

      - name: Run pytest
        run: uv run pytest -vv tests/

  push-pypi:
    runs-on: ubuntu-latest
    needs:
      - test
      - pre-commit
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
    permissions:
      contents: read
      id-token: write
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      - name: Install uv
        uses: astral-sh/setup-uv@v6

      - name: Install python dependencies
        run: uv sync --all-extras --dev

      - name: Set release env, replace 'v' in tag
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/tags/}" | sed "s/v//g" >> $GITHUB_ENV

      - name: Replace version in pyproject.toml
        run: |
          sed -i 's/^version = "[^"]*"/version = "${{env.RELEASE_VERSION}}"/' pyproject.toml

      - name: Build package
        run: uv build

      - name: Publish package
        run: uv publish

  semantic-release:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    needs:
      - pre-commit
      - test
    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false

      - id: generate_token
        uses: actions/create-github-app-token@v2
        with:
          app-id: ${{ secrets.CICD_APP_ID }}
          private-key: ${{ secrets.CICD_APP_PRIVATE_KEY }}

      - name: Semantic Release
        uses: cycjimmy/semantic-release-action@v3
        env:
          GITHUB_TOKEN: "${{ steps.generate_token.outputs.token }}"
